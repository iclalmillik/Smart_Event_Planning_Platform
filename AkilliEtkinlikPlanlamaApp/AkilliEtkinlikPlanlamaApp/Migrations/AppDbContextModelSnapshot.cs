// <auto-generated />
using System;
using AkilliEtkinlikPlanlamaApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AkilliEtkinlikPlanlamaApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AkilliEtkinlikPlanlamaApp.Models.Entities.Etkinlikler", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EtkinlikAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EtkinlikFotoYolu")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Kategori")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Konum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<TimeSpan>("Saat")
                        .HasColumnType("time");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("KullaniciID");

                    b.ToTable("Etkinlikler");
                });

            modelBuilder.Entity("AkilliEtkinlikPlanlamaApp.Models.Entities.IlgiAlani", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("IlgiAlaniAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("IlgiAlanlari");
                });

            modelBuilder.Entity("AkilliEtkinlikPlanlamaApp.Models.Entities.Katilimci", b =>
                {
                    b.Property<int?>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<int?>("EtkinlikID")
                        .HasColumnType("int");

                    b.HasKey("KullaniciID", "EtkinlikID");

                    b.HasIndex("EtkinlikID");

                    b.ToTable("Katilimcilar");
                });

            modelBuilder.Entity("AkilliEtkinlikPlanlamaApp.Models.Entities.Kullanici", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Ad")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cinsiyet")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ConfirmCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DogumTarihi")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IlgiAlanlariID")
                        .HasColumnType("int");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Konum")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("KullaniciAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProfilFotografiYolu")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("RollerID")
                        .HasColumnType("int");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SifreOnay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TelefonNumarasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("RollerID");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("AkilliEtkinlikPlanlamaApp.Models.Entities.KullaniciIlgiAlani", b =>
                {
                    b.Property<int>("KullanicilarID")
                        .HasColumnType("int");

                    b.Property<int>("IlgiAlanlariID")
                        .HasColumnType("int");

                    b.HasKey("KullanicilarID", "IlgiAlanlariID");

                    b.HasIndex("IlgiAlanlariID");

                    b.ToTable("KullaniciIlgiAlanlari");
                });

            modelBuilder.Entity("AkilliEtkinlikPlanlamaApp.Models.Entities.Mesaj", b =>
                {
                    b.Property<int>("MesajID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MesajID"));

                    b.Property<int?>("AliciID")
                        .HasColumnType("int");

                    b.Property<int?>("EtkinlikID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GonderimZamani")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("GöndericiID")
                        .HasColumnType("int");

                    b.Property<string>("MesajMetni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MesajID");

                    b.HasIndex("AliciID");

                    b.HasIndex("EtkinlikID");

                    b.HasIndex("GöndericiID");

                    b.ToTable("Mesajlar");
                });

            modelBuilder.Entity("AkilliEtkinlikPlanlamaApp.Models.Entities.Puan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("KazanilanTarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<int>("PuanDegeri")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KullaniciID");

                    b.ToTable("Puanlar");
                });

            modelBuilder.Entity("AkilliEtkinlikPlanlamaApp.Models.Entities.Roller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roller");
                });

            modelBuilder.Entity("IlgiAlaniKullanici", b =>
                {
                    b.Property<int>("IlgiAlanlariID")
                        .HasColumnType("int");

                    b.Property<int>("KullanicilarID")
                        .HasColumnType("int");

                    b.HasKey("IlgiAlanlariID", "KullanicilarID");

                    b.HasIndex("KullanicilarID");

                    b.ToTable("KullaniciIlgiAlani", (string)null);
                });

            modelBuilder.Entity("AkilliEtkinlikPlanlamaApp.Models.Entities.Etkinlikler", b =>
                {
                    b.HasOne("AkilliEtkinlikPlanlamaApp.Models.Entities.Kullanici", "Kullanici")
                        .WithMany("Etkinlikler")
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("AkilliEtkinlikPlanlamaApp.Models.Entities.Katilimci", b =>
                {
                    b.HasOne("AkilliEtkinlikPlanlamaApp.Models.Entities.Etkinlikler", "Etkinlik")
                        .WithMany("Katilimcilar")
                        .HasForeignKey("EtkinlikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AkilliEtkinlikPlanlamaApp.Models.Entities.Kullanici", "Kullanici")
                        .WithMany("Katilimcilar")
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Etkinlik");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("AkilliEtkinlikPlanlamaApp.Models.Entities.Kullanici", b =>
                {
                    b.HasOne("AkilliEtkinlikPlanlamaApp.Models.Entities.Roller", "Roller")
                        .WithMany("Kullanicilar")
                        .HasForeignKey("RollerID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Roller");
                });

            modelBuilder.Entity("AkilliEtkinlikPlanlamaApp.Models.Entities.KullaniciIlgiAlani", b =>
                {
                    b.HasOne("AkilliEtkinlikPlanlamaApp.Models.Entities.IlgiAlani", "IlgiAlanlari")
                        .WithMany("KullaniciIlgiAlanlari")
                        .HasForeignKey("IlgiAlanlariID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AkilliEtkinlikPlanlamaApp.Models.Entities.Kullanici", "Kullanicilar")
                        .WithMany("KullaniciIlgiAlanlari")
                        .HasForeignKey("KullanicilarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IlgiAlanlari");

                    b.Navigation("Kullanicilar");
                });

            modelBuilder.Entity("AkilliEtkinlikPlanlamaApp.Models.Entities.Mesaj", b =>
                {
                    b.HasOne("AkilliEtkinlikPlanlamaApp.Models.Entities.Kullanici", "Alici")
                        .WithMany("AldigiMesajlar")
                        .HasForeignKey("AliciID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AkilliEtkinlikPlanlamaApp.Models.Entities.Etkinlikler", "Etkinlik")
                        .WithMany("Mesajlar")
                        .HasForeignKey("EtkinlikID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AkilliEtkinlikPlanlamaApp.Models.Entities.Kullanici", "Gönderici")
                        .WithMany("GonderdigiMesajlar")
                        .HasForeignKey("GöndericiID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Alici");

                    b.Navigation("Etkinlik");

                    b.Navigation("Gönderici");
                });

            modelBuilder.Entity("AkilliEtkinlikPlanlamaApp.Models.Entities.Puan", b =>
                {
                    b.HasOne("AkilliEtkinlikPlanlamaApp.Models.Entities.Kullanici", "Kullanici")
                        .WithMany("Puanlar")
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("IlgiAlaniKullanici", b =>
                {
                    b.HasOne("AkilliEtkinlikPlanlamaApp.Models.Entities.IlgiAlani", null)
                        .WithMany()
                        .HasForeignKey("IlgiAlanlariID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AkilliEtkinlikPlanlamaApp.Models.Entities.Kullanici", null)
                        .WithMany()
                        .HasForeignKey("KullanicilarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AkilliEtkinlikPlanlamaApp.Models.Entities.Etkinlikler", b =>
                {
                    b.Navigation("Katilimcilar");

                    b.Navigation("Mesajlar");
                });

            modelBuilder.Entity("AkilliEtkinlikPlanlamaApp.Models.Entities.IlgiAlani", b =>
                {
                    b.Navigation("KullaniciIlgiAlanlari");
                });

            modelBuilder.Entity("AkilliEtkinlikPlanlamaApp.Models.Entities.Kullanici", b =>
                {
                    b.Navigation("AldigiMesajlar");

                    b.Navigation("Etkinlikler");

                    b.Navigation("GonderdigiMesajlar");

                    b.Navigation("Katilimcilar");

                    b.Navigation("KullaniciIlgiAlanlari");

                    b.Navigation("Puanlar");
                });

            modelBuilder.Entity("AkilliEtkinlikPlanlamaApp.Models.Entities.Roller", b =>
                {
                    b.Navigation("Kullanicilar");
                });
#pragma warning restore 612, 618
        }
    }
}
